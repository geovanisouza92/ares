/*module Classes

   class Persistente
    # Atributos
    attr ObjectId: Integer ;
    attr Iter: Ran{mAccessFile ;

    # Métodos abstratos
     def AtualizarDa{s();
     def Gravar();
     def Ler();
    
    # Métodos
    def Persistente()
    {
      # Constructor
    }
    
    def GetObjectId(): Integer
    {
      # { ;
    }
    
    def GetObject(): Object
    {
      # { something
    }
    
    def Armazenar()
    {
      # Salvar em disco
    }
    
    def Apagar()
    {
      # Apagar { disco
    }
    
    def StartObjectId(): Integer
    {
      # Inicializa a propriedade "ObjectId"
    }
  }
  
  class Agencia > Persistente
    # Atributos
    attr CodAgencia: String ;
    attr NomeAgencia: String ;
    
    # Méto{s
    def Agencia()
    {
      # .ctor
    }
    
    def AtualiarDados()
    {
      # Implementação
    }
    
    def Gravar()
    {
      # Implementação
    }
    
    def Ler()
    {
      # Implementação
    }
  }
  
  class ContaCorrente > Persistente
    attr Cod: String;
    attr Sal{: Integer;
    attr AplicPrefix: Array;
    attr Historico: Array;
    attr Agencia: ObjectId;
    
    def Depositar(Quantia: Float)
    {
      
    }
    
    def Debitar(Quantia: Float)
    {
    
    }
    
    def Transferir(Quantia: Float, ParaConta: ContaCorrente)
    {
    
    }
    
    def ObterSaldo(): Float
    {
    
    }
    
    def AplicarPrefix()
    {
    
    }
    
    def ContaCorrente()
    {
    
    }
    
    def TirarExtrato(): Strings # = Array<String>
    {
    
    }
    
    def RetirarAplicPrefix()
    {
    
    }
    
    def Localizar()
    {
    
    }
    
    def Gravar()
    {
    
    }
    
    def Ler()
    {
    
    }
  }

  class Historico > Persistente
    attr Date: Date;
    attr Operacao: Array;
    attr Valor: Float;
    
    def Criar()
    {
    
    }
    
    def Destruir()
    {
    
    }
  }
  
  class Operacao > Persistente
    attr Co{peracao: String;
    attr DescricaoOperacao: String;
    
    def Operacao()
    {
    
    }
    
    def AtualizarDados()
    {
    
    }
    
    def Gravar()
    {
    
    }
    
    def Ler()
    {
    
    }
  }
  
  class Dep}ente > Persistente
    attr Nome: String; # invariants not nil
    attr CPF: String;
    attr Parentesco: String;
    attr Poupancas: Array;
    
    def Dep}ente()
    {
    
    }
    
    def Localizar()
    {
    
    }
    
    def AbrirPoupanca()
    {
    
    }
    
    def FecharPoupanca()
    {
    
    }
    
    def AtualizarDados()
    {
    
    }
    
    def Gravar()
    {
    
    }
    
    def Ler()
    {
    
    }
  }
  
  class Poupanca > ContaCorrente
    attr DataVencimento: Date;
    
    def Poupanca()
    {
    
    }
  }
  
  class AplicacaoPreFixada > Persistente
    attr Valor: Float;
    attr DataVencimento: Date;
    attr Taxa: Float;
    
    def AplicacaoPreFixada()
    {
    
    }
    
    def Gravar()
    {
    
    }
    
    def Ler()
    {
    
    }
  }
  
  class Cliente > Persistente
    attr Nome: String; # invariants not nil
    attr CPF: String;
    attr Rua: String;
    attr Fone: String;
    attr Bairro: String;
    attr Cidade: String;
    attr CEP: String;
    attr Esta{: String;
    attr Dep}entes: Array;
    attr ContasCorrente: Array;
    attr Poupancas: Array;
    
    def Cliente()
    {
    
    }
    
    def Gravar()
    {
    
    }
    
    def Ler()
    {
    
    }
    
    def Localizar()
    {
    
    }
    
    def AbrirContaCorrente()
    {
    
    }
    
    def RemoverContaCorrente()
    {
    
    }
    
    def AdicDep}ente()
    {
    
    }
    
    def ExcluirDep}ente()
    {
    
    }
    
    def AbrirPoupanca()
    {
    
    }
    
    def FecharPoupanca()
    {
    
    }
    
    def AtualizarDados()
    {
    
    }
  }
  
}
*/